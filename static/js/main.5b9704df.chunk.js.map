{"version":3,"sources":["data.js","components/Header.jsx","components/Rating.jsx","components/MovieCard.jsx","components/MovieList.jsx","components/SearchBar.jsx","components/AddMovie.jsx","components/MovieLibrary.jsx","App.js","serviceWorker.js","index.js"],"names":["movies","title","subtitle","storyline","rating","imagePath","bookmarked","genre","Header","className","React","Component","Rating","this","props","MovieCard","movie","alt","src","MovieList","map","key","SearchBar","searchText","onSearchTextChange","bookmarkedOnly","onBookmarkedChange","selectedGenre","onSelectedGenreChange","htmlFor","name","value","onChange","type","searchInput","display","margin","checked","onlyBookMarked","margin-top","id","option","selection","input","innerText","AddMovie","state","bind","addMovie","console","log","setState","onClick","align","e","target","Number","MovieLibrary","onBookmarkedOnly","onSelectedGenre","filterBy","event","text","filter","filtered","callback","arr","filterByText","Object","values","some","detail","toLowerCase","includes","ifStringLowerCase","filterByMarked","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b9704df.chunk.js","sourcesContent":["const movies = [\n  {\n    title: 'Kingsglaive',\n    subtitle: 'Final Fantasy XV',\n    storyline: \"King Regis, who oversees the land of Lucis, commands his army of soldiers to protect the kingdom from the Niflheim empire's plans to steal the sacred crystal.\",\n    rating: 4.5,\n    imagePath: 'images/Kingsglaive_Final_Fantasy_XV.jpg',\n    bookmarked: false,\n    genre: 'action',\n  },\n  {\n    title: 'Final Fantasy',\n    subtitle: 'Spirits Within',\n    storyline:\n      'A scientist makes a last stand on Earth with the help of a ragtag team of soldiers against an invasion of alien phantoms.',\n    rating: 4.5,\n    imagePath: 'images/Final_Fantasy_Spirits_Within.jpg',\n    bookmarked: false,\n    genre: 'fantasy',\n  },\n  {\n    title: 'Ghost In The Shell',\n    subtitle: 'Ghost In The Shell',\n    storyline:\n      'A hacker known as the Puppet Master is hunted by a female cyborg cop and her partner. This film is a revised version of Ghost in the Shell (1995).',\n    rating: 5,\n    imagePath: 'images/Ghost_In_The_Shell_2_0.jpg',\n    bookmarked: true,\n    genre: 'comedy',\n  },\n  {\n    title: 'Appleseed Alpha',\n    subtitle: 'Appleseed Alpha',\n    storyline:\n      \"A young female soldier Deunan and her cyborg partner Briareos survive through the post World War 3 apocalyptic New York in search of human's future hope, the legendary city of Olympus.\",\n    rating: 3.8,\n    imagePath: 'images/Appleseed_Alpha.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Resident Evil',\n    subtitle: 'Vendetta',\n    storyline:\n      'Chris Redfield enlists the help of Leon S. Kennedy and Rebecca Chambers to stop a death merchant, with a vengeance, from spreading a deadly virus in New York.',\n    rating: 4.2,\n    imagePath: 'images/Resident_Evil_Vendetta.jpg',\n    bookmarked: true,\n    genre: 'fantasy',\n  },\n];\n\nexport default movies;\n","import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"movie-card-header\">\n        <h1 className=\"page-title\">Movie Cards Library</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React from 'react';\n\nclass Rating extends React.Component {\n  render() {\n    const { rating } = this.props;\n    return (\n      <div className=\"movie-card-rating\">\n        <span className=\"rating\">{rating}</span>\n      </div>\n    );\n  }\n}\n\nexport default Rating;\n","import React from 'react';\n\nimport Rating from './Rating';\n\nclass MovieCard extends React.Component {\n  render() {\n    const { movie } = this.props;\n    const { title, subtitle, storyline, rating, imagePath } = movie;\n    return (\n      <div className=\"movie-card\">\n        <img alt=\"Movie Cover\" className=\"movie-card-image\" src={imagePath} />\n        <div className=\"movie-card-body\">\n          <h4 className=\"movie-card-title\">{title}</h4>\n          <h5 className=\"movie-card-subtitle\">{subtitle}</h5>\n          <p className=\"movie-card-storyline\">{storyline}</p>\n        </div>\n        <Rating rating={rating} />\n      </div>\n    );\n  }\n}\n\nexport default MovieCard;\n","import React from 'react';\n\nimport MovieCard from './MovieCard';\n\nclass MovieList extends React.Component {\n  render() {\n    const { movies } = this.props;\n\n    return (\n      <div className=\"movie-list\">\n        {movies.map((movie) => <MovieCard key={movie.title} movie={movie} />)}\n      </div>\n    );\n  }\n}\n\nexport default MovieList;\n","import React, { Component } from 'react';\n\nconst searchInput = (searchText, onSearchTextChange) => (\n  <label htmlFor=\"searchText\">\n    <p>Inclui o texto:</p>\n    <input\n      name=\"searchText\"\n      value={searchText}\n      onChange={onSearchTextChange}\n      type=\"text\"\n    />\n  </label>\n);\nconst onlyBookMarked = (bookmarkedOnly, onBookmarkedChange) => (\n  <label htmlFor=\"bookMarker\" display='flex'>\n    <p>Mostrar somente favoritos</p>\n    <input\n      display='flex'\n      margin='50vw'\n      name=\"bookMarker\"\n      type=\"checkbox\"\n      checked={bookmarkedOnly}\n      onChange={onBookmarkedChange}\n    />\n  </label>\n);\nconst selection = (selectedGenre, onSelectedGenreChange) => {\n  const selectArr = [\n    ['', 'Todos'],\n    ['action', 'Ação'],\n    ['comedy', 'Comédia'],\n    ['thriller', 'Suspense'],\n  ];\n  return (\n    <div margin-top='10px' >\n      <label display='flex' htmlFor=\"genreSelMoecion\">Filtrar por gênero</label>\n      <select\n        id=\"genreSelecion\"\n        name=\"genreSelecion\"\n        value={selectedGenre}\n        onChange={onSelectedGenreChange}\n      >\n        {selectArr.map((option) => (\n          <option key={option[0]} value={option[0]}>\n            {option[1]}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\nclass SearchBar extends Component {\n  render() {\n    const {\n      searchText, onSearchTextChange, bookmarkedOnly,\n      onBookmarkedChange, selectedGenre, onSelectedGenreChange,\n    } = this.props;\n    return (\n      <form>\n        {searchInput(searchText, onSearchTextChange)}\n        {onlyBookMarked(bookmarkedOnly, onBookmarkedChange)}\n        {selection(selectedGenre, onSelectedGenreChange)}\n      </form>\n    );\n  }\n}\n\nexport default SearchBar;\n","// implement AddMovie component here\nimport React, { Component } from 'react';\n\nconst selection = (selectedGenre, onSelectedGenreChange) => {\n  const selectArr = [['action', 'Ação'], ['comedy', 'Comédia'], ['thriller', 'Suspense']];\n  return (\n    <div>\n      <label htmlFor=\"genre\">\n      Gênero\n        <select\n          id=\"genre\"\n          name=\"genre\"\n          value={selectedGenre}\n          onChange={onSelectedGenreChange}\n        >\n          {selectArr.map((option) => (\n            <option key={option[0]} value={option[0]}>\n              {option[1]}\n            </option>\n          ))}\n        </select>\n      </label>\n    </div>\n  );\n};\nconst input = (type, innerText, name, value, onChange) => (\n  <div display = 'flex'>\n    <label htmlFor={name}>\n      <p>{innerText}</p>\n      <input\n        name={name}\n        id={name}\n        value={value}\n        onChange={onChange}\n        type={type}\n      />\n    </label>\n  </div>\n);\nclass AddMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      subtitle: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    };\n    this.onChange = this.onChange.bind(this);\n    this.addMovie = this.addMovie.bind(this);\n  }\n\nonChange(value, name) {\n    // const { value } = event.target;\n    console.log(value);\n    this.setState({ [name]: value });\n  }\n\n  addMovie() {\n    const { onClick } = this.props;\n    onClick(this.state);\n    this.setState({\n      title: '',\n      subtitle: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    });\n  }\n\n  render() {\n    const { title, subtitle, imagePath, storyline, rating, genre } = this.state;\n    return (\n      <form align='center'>\n        {input('text', 'Título', 'title', title, (e) =>\n         this.onChange(e.target.value, 'title'))}\n        {input('text', 'Subtítulo', 'subtitle', subtitle, (e) =>\n         this.onChange(e.target.value, 'subtitle'))}\n        {input('text', 'Imagem', 'imagePath', imagePath, (e) =>\n         this.onChange(e.target.value, 'imagePath'))}\n        <label htmlFor=\"storyline\">\n          <p>Sinopse</p>\n          <textarea\n            name=\"storyline\"\n            value={storyline}\n            onChange={(e) => this.onChange(e.target.value, 'storyline')}\n          />\n        </label>\n        {input('number', 'Avaliação', 'rating', rating, (e) => this.onChange(\n          Number(e.target.value), 'rating',\n        ))}\n        {selection(genre, (e) => this.onChange(e.target.value, 'genre'))}\n        <button type=\"button\" onClick={this.addMovie}>\n          Adicionar filme\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default AddMovie;\n","// implement MovieLibrary component here\nimport React, { Component } from 'react';\n\nimport MovieList from './MovieList';\nimport SearchBar from './SearchBar';\nimport AddMovie from './AddMovie';\n\nclass MovieLibrary extends Component {\n  constructor(props) {\n    super(props);\n    const { movies } = this.props;\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies,\n    };\n    this.onSearchTextChange = this.onSearchTextChange.bind(this);\n    this.onBookmarkedOnly = this.onBookmarkedOnly.bind(this);\n    this.onSelectedGenre = this.onSelectedGenre.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.filterBy = this.filterBy.bind(this);\n  }\n\n  onSearchTextChange(event) {\n    const text = event.target.value;\n    this.setState({ searchText: text });\n  }\n\n  onBookmarkedOnly() {\n    this.setState((state) => ({ bookmarkedOnly: !state.bookmarkedOnly }));\n    const filtered = (state) => {\n      if (state.bookmarkedOnly) {\n        console.log('insideFilter ', state.bookmarkedOnly);\n        // console.log(state.movies.filter((movie) => movie.bookmarked === true));\n        return state.movies.filter((movie) => movie.bookmarked === true);\n      }\n      return state.movies;\n    };\n\n    //   console.log('prevState', this.state.bookmarkedOnly);\n    this.setState((state) => {\n      filtered(state);\n    });\n  }\n\n  onSelectedGenre(event) {\n    const { value } = event.target;\n    this.setState({ selectedGenre: value });\n    return value;\n  }\n\n  onClick(callback) {\n    this.setState((state) => ({ movies: [...state.movies, callback] }));\n    // this.setState((prevState) => {\n    //   prevState.movies.push(callback);\n    // });\n  }\n\n  filterBy(arr) {\n    const { selectedGenre, bookmarkedOnly, searchText } = this.state;\n    const ifStringLowerCase = (detail) => (typeof detail === 'string'\n      ? detail.toLowerCase().includes(searchText.toLowerCase())\n      : false);\n    const filterByText = searchText === ''\n      ? arr\n      : arr.filter((movie) => Object.values(movie).some((detail) => ifStringLowerCase(detail)));\n\n    const filterByMarked = bookmarkedOnly\n      ? filterByText.filter((movie) => movie.bookmarked === true)\n      : filterByText;\n\n    const filterByGender = selectedGenre\n      ? filterByMarked.filter((movie) => movie.genre === selectedGenre) : filterByMarked;\n    return filterByGender;\n  }\n\n  render() {\n    console.log('render the page');\n    const { searchText, bookmarkedOnly, selectedGenre, movies } = this.state;\n    return (\n      <div>\n        <h2> My awesome movie library </h2>\n        <SearchBar\n          searchText={searchText}\n          onSearchTextChange={this.onSearchTextChange}\n          bookmarkedOnly={bookmarkedOnly}\n          onBookmarkedChange={this.onBookmarkedOnly}\n          selectedGenre={selectedGenre}\n          onSelectedGenreChange={this.onSelectedGenre}\n        />\n        <MovieList movies={this.filterBy(movies)} />\n        <AddMovie onClick={this.onClick} />\n      </div>\n    );\n  }\n}\n\nexport default MovieLibrary;\n","import React from 'react';\nimport './App.css';\n\nimport movies from './data';\nimport Header from './components/Header';\nimport MovieLibrary from './components/MovieLibrary';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MovieLibrary movies={movies} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}